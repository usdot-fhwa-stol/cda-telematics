name: carma-streets-bridge

on:
  workflow_dispatch:
  push:
    branches:
      - "feature_gha"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          context: ./telematic_system/telematic_units/carma_street_bridge/
          file: ./telematic_system/telematic_units/carma_street_bridge/Dockerfile
          push: true
          tags: usdotfhwastoldev/carma_street_nats_bridge:${{ github.ref_name }}

  sonar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis    
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8  
      #- name: install.sh
        #run: ./telematic_system/telematic_units/carma_vehicle_bridge/ros2_nats_bridge/docker/install.sh
      - name: Install ROS2 package
      - uses: ros-tooling/action-ros-ci@v0.2
        with:
          package-name: rclpy
          target-ros2-distro: Foxy
      - name: Install dependencies
        run: python -m pip install -r telematic_system/telematic_units/carma_street_bridge/requirements.txt
      - name: Install tox and any other packages
        run: pip install tox
      - name: Run tox
        run: tox -e py
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=usdot-fhwa-stol_cda-telematics
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.projectName=cda-telematics
            -Dsonar.organization=usdot-fhwa-stol
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.verbose=true
            -Dsonar.java.binaries=.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

