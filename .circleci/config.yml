version: 2
#  Copyright (C) 2018-2022 LEIDOS.
# 
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
# 
#  http://www.apache.org/licenses/LICENSE-2.0
# 
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.
# 

# Configuration file for Circle CI 
# CI will report failure if any executed command returns and error status
# Operations performed are as follows
# Build source code
# Run unit tests for C++ and Java
# Run static code analyzer for SourceCloud
# Upload test results
# Every run command should start with source ${INIT_ENV} to ensure all default dependancies are available
jobs:
  build:
    # Pull docker image 
    # XTERM used for better make output
    docker:
      - image: usdotfhwastoldev/carma-base:develop
        user: carma
        environment:
          TERM: xterm
          INIT_ENV: /home/carma/.base-image/init-env.sh
          ROS_2_ENV: /opt/ros/foxy/setup.bash
    resource_class: large 
    # Set working directory
    working_directory: "/opt/carma/"
    # Pull code and execute tests |
    # Name of each run command defines purpose use
    steps:
      #setup remote docker
      - setup_remote_docker :
          docker_layer_caching: true
      - run:
          name: Create src folder
          command: |
            source ${INIT_ENV}
            mkdir src
            cd src
            mkdir cda-telematics
      - checkout:
          path: src/cda-telematics
      - run: 
          name: Pull Deps
          command: |
            source ${INIT_ENV}
            ./src/cda-telematics/telematic_system/telematic_units/ros2_nats_bridge/ros2_nats_bridge/docker/checkout.sh -r ${PWD}
      - run:
          name: Build Driver
          command: |
            source ${INIT_ENV}
            source ${ROS_2_ENV}
            build-wrapper-linux-x86-64 --out-dir /opt/carma/bw-output bash make_with_coverage.bash -m -e /opt/carma/ -o ./coverage_reports/gcov
  docker_build_push_cda-telematics :
   machine:
    image: ubuntu-2004:202201-02
   resource_class: large 
   steps:
     - checkout      
     - run: 
        name: Docker Build
        command: |
         docker build -t usdotfhwastoldev/cda-telematics:latest -f telematic_system/telematic_units/ros2_nats_bridge/Dockerfile .         
    
     - run: 
        name: Docker Push
        # Push Cda- telematics docker image to usdotfhwastoldev dockerhub
        command: | 
         echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUB_USERNAME --password-stdin
         docker push usdotfhwastoldev/cda-telematics:latest     
     
workflows:
  version: 2
  build:
    jobs:

      - docker_build_push_cda-telematics:
          filters:
           branches:
              ignore: develop
      - build
